name: CI/CD Pipeline

on:
  push:
    branches:
      - master  #Nombre de la rama
  pull_request:
    branches:
      - master

jobs:
  build-test-analysis:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    #CodeBuild
    - name: Configurar Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.3

    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    #Test
    - name: Ejecutar tests
      run: |
        python manage.py test

    # Code Coverage
    - name: Check code coverage
      run: |
        pip install coverage
        coverage run manage.py test
        coverage report
  
  #Construir Imagen y Subirla en DockerHub
  docker-build-push:
    needs: build-test-analysis
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME  }}
        password: ${{ secrets.DOCKER_PASSWORD  }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/python_devops:latest  # Nombre de la imagen

    # Escaneo Vulnerabilidades imagen
    - name: Scan the Docker image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'jfmarquez23/python_devops:latest'
        format: 'table'
        
    # Despliegue en Minicube   
    # Setup Minikube
    - name: Instalar Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube

    # Setup kubectl
    - name: Instalar kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

    # Start Minikube
    - name: Iniciar Minikube
      run: |
        minikube start --driver=none

    # Build and push the image to Minikube's Docker daemon
    - name: Construir y cargar imagen en Minikube
      run: |
        minikube image load python_devops:latest

    # Apply kubernetes deployment and service
    - name: Desplegar la aplicaci√≥n
      run: |
        kubectl apply -f Prueba.yaml
        kubectl expose deployment mi-app --type=NodePort --port=8000

    # Check deployment status
    - name: Comprobar estado del despliegue
      run: |
        kubectl rollout status deployment/mi-app

    # Get service URL
    - name: Obtener URL del servicio
      run: |
        minikube service mi-app --url