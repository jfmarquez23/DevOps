name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-analysis:
    #runs-on: ubuntu-latest

    #services:
      #postgres:
        #image: postgres:12
        #env:
          #POSTGRES_DB: mydb
          #POSTGRES_USER: user
          #POSTGRES_PASSWORD: password
        #ports:
          #- 5432:5432
        # Options to use the service container
        #options: >-
          #--health-cmd pg_isready
          #--health-interval 10s
          #--health-timeout 5s
          #--health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        python manage.py test

    # Static Code Analysis
    - name: Lint with Flake8
      run: |
        pip install flake8
        flake8 .

    # Code Coverage (Example with Coverage.py)
    - name: Check code coverage
      run: |
        pip install coverage
        coverage run manage.py test
        coverage report

  docker-build-push:
    needs: build-test-analysis
    #runs-on: ubuntu-latest
    #steps:
    #- uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME  }}
        password: ${{ secrets.DOCKER_PASSWORD  }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: jfmarquez23/pruebas_python:latest

    # Optional: Vulnerability Scan
    - name: Scan the Docker image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'jfmarquez23/pruebas_python:latest'
        format: 'table'